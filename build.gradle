buildscript {
    ext {
        springBootVersion = '1.4.1.RELEASE'
        hibernateVersion = '5.2.2.Final'
        springDataVersion = '1.12.4.RELEASE'
        springSecurityVersion = '2.0.11.RELEASE'
        mysqlConnectorVersion = '6.0.4'
        lombokVersion = '1.16.10'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    group 'me.academeg'
    version = '1.0-SNAPSHOT'

    repositories {
        mavenCentral()
        jcenter()
    }

    configurations {
        oneJar
    }
}

project(':blog-api') {
    apply plugin: 'spring-boot'

    dependencies {
        // Spring
        compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
        compile "org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}"
        compile "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
        compile "org.springframework.data:spring-data-commons:${springDataVersion}"

        // Spring Security
        compile "org.springframework.security.oauth:spring-security-oauth2:${springSecurityVersion}"

        // MySql connector
        compile "mysql:mysql-connector-java:${mysqlConnectorVersion}"

        // Lombok for create getter/setter and other cool features
        compile "org.projectlombok:lombok:${lombokVersion}"

        compile project(':blog-frontend')
    }
}

project(':blog-frontend') {
    dependencies {
        // Spring
        compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    }
}
